{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fionaneumann/Documents/React/Project/vegancos/screens/ProductDetailScreen.js\";\n\nimport React, { Component, useState, useEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport * as firebase from 'firebase';\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      entities = _useState2[0],\n      setEntities = _useState2[1];\n\n  var sortedData = global.myData.filter(function (products) {\n    return products.id === global.itemId;\n  });\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      entityText = _useState4[0],\n      setEntityText = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      favorites = _useState6[0],\n      setFavorites = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      itemIsFavorite = _useState8[0],\n      setItemIsFavorite = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filteredArray = _useState10[0],\n      setFilteredArray = _useState10[1];\n\n  var entityRef = firebase.firestore().collection('Favorites');\n\n  var getFavorites = function getFavorites() {\n    return _regeneratorRuntime.async(function getFavorites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(entityRef.where(\"authorID\", \"==\", global.myUserString).onSnapshot(function (querySnapshot) {\n              var newEntities = [];\n              querySnapshot.forEach(function (doc) {\n                var entity = doc.data();\n                entity.id = doc.id;\n                newEntities.push(entity);\n              });\n              setEntities(newEntities);\n              setFavorites(newEntities);\n            }, function (error) {\n              console.log(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getFiltered = function getFiltered() {\n    var filterArray;\n    return _regeneratorRuntime.async(function getFiltered$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(setItemIsFavorite(true));\n\n          case 2:\n            getFavorites();\n            filterArray = favorites.filter(function (data) {\n              return data.title === global.itemTitle;\n            });\n            setFilteredArray(filterArray);\n\n            if (!filterArray.length) {\n              console.log(\"Array is empty\");\n              setItemIsFavorite(false);\n            } else {\n              console.log(\"filter has elements\");\n              setItemIsFavorite(true);\n            }\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getFiltered();\n  }, [filteredArray]);\n\n  var onAddButtonPress = function onAddButtonPress() {\n    setItemIsFavorite(true);\n    var timestamp = firebase.firestore.FieldValue.serverTimestamp();\n    var data = {\n      title: global.itemTitle,\n      description: global.itemDescription,\n      brand: global.itemBrand,\n      category: global.itemCategory,\n      stores: global.itemStore,\n      authorID: global.myUserString,\n      createdAt: timestamp,\n      photo: global.itemPhoto\n    };\n    entityRef.add(data).then(function (_doc) {\n      setEntityText('');\n      Keyboard.dismiss();\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.MainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: sortedData,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.row,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, item.description), React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        style: styles.tinyLogo,\n        source: {\n          uri: item.photo\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      })));\n    },\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), itemIsFavorite === true ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \" This item is already a favorite of yours!\") : React.createElement(Button, {\n    title: \"Add to Favorites\",\n    onPress: onAddButtonPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }));\n};\n\nProductDetailScreen.navigationOptions = function (navigationData) {\n  global.itemTitle = navigationData.navigation.getParam('itemTitle');\n  global.itemId = navigationData.navigation.getParam('itemId');\n  global.itemDescription = navigationData.navigation.getParam(\"itemDescription\");\n  global.itemPhoto = navigationData.navigation.getParam(\"itemPhoto\");\n  global.itemStore = navigationData.navigation.getParam(\"itemStore\");\n  global.itemBrand = navigationData.navigation.getParam(\"itemBrand\");\n  global.itemCategory = navigationData.navigation.getParam(\"itemCategory\");\n  return {\n    headerTitle: itemTitle\n  };\n};\n\nvar styles = StyleSheet.create({\n  MainContainer: {\n    justifyContent: 'center',\n    flex: 1,\n    margin: 5\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50\n  },\n  row: {\n    fontSize: 18,\n    padding: 12\n  },\n  textInput: {\n    textAlign: 'center',\n    height: 42,\n    borderWidth: 1,\n    borderColor: '#009688',\n    borderRadius: 8,\n    backgroundColor: \"#FFFF\"\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/Users/fionaneumann/Documents/React/Project/vegancos/screens/ProductDetailScreen.js"],"names":["React","Component","useState","useEffect","firebase","ProductDetailScreen","props","entities","setEntities","sortedData","global","myData","filter","products","id","itemId","entityText","setEntityText","favorites","setFavorites","itemIsFavorite","setItemIsFavorite","filteredArray","setFilteredArray","entityRef","firestore","collection","getFavorites","where","myUserString","onSnapshot","querySnapshot","newEntities","forEach","doc","entity","data","push","error","console","log","getFiltered","filterArray","title","itemTitle","length","onAddButtonPress","timestamp","FieldValue","serverTimestamp","description","itemDescription","brand","itemBrand","category","itemCategory","stores","itemStore","authorID","createdAt","photo","itemPhoto","add","then","_doc","Keyboard","dismiss","catch","alert","styles","MainContainer","item","index","toString","row","tinyLogo","uri","marginTop","navigationOptions","navigationData","navigation","getParam","headerTitle","StyleSheet","create","justifyContent","flex","margin","width","height","fontSize","padding","textInput","textAlign","borderWidth","borderColor","borderRadius","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\n\nimport { ActivityIndicator, Button, Image, Alert, FlatList, Text, StyleSheet, View, TextInput, InteractionManager } from 'react-native';\nimport * as firebase from 'firebase';\n\n\n\n\nconst ProductDetailScreen = props => {\n\n  const [entities, setEntities] = useState([])\n  const sortedData = global.myData.filter(\n    products => products.id === global.itemId);\n  const [entityText, setEntityText] = useState('')\n\n  const[favorites, setFavorites] = useState([]);\n  const[itemIsFavorite, setItemIsFavorite] = useState(false);\n  const [filteredArray, setFilteredArray] = useState([]);\n\n  const entityRef = firebase.firestore().collection('Favorites')\n\n\n\n \n    const getFavorites = async () =>{\n      await\n    entityRef\n        .where(\"authorID\", \"==\", global.myUserString)\n        .onSnapshot(\n            querySnapshot => {\n                const newEntities = []\n                querySnapshot.forEach(doc => {\n                    const entity = doc.data()\n                    entity.id = doc.id\n                    newEntities.push(entity)\n                   \n                });\n                setEntities(newEntities)\n                setFavorites(newEntities)\n               \n\n                \n               \n               \n            },\n            error => {\n                console.log(error)\n            }\n            \n        )\n} \n\n\nconst getFiltered = async () =>{\n  await\n  setItemIsFavorite(true)\n  getFavorites();\n   const filterArray = favorites.filter(data => data.title === global.itemTitle)\n   setFilteredArray(filterArray);\n  if (!filterArray.length){\n    console.log(\"Array is empty\")\n  \n    \n    setItemIsFavorite(false)\n    } else {\n      console.log(\"filter has elements\")\n     \n    \n      setItemIsFavorite(true)\n    }\n\n};\n\n\nuseEffect(() => {\n  getFiltered();\n\n}, [filteredArray]);\n\n\n  const onAddButtonPress = () => {\n    setItemIsFavorite(true)\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp();\n    const data = {\n      title: global.itemTitle,\n      description: global.itemDescription,\n      brand: global.itemBrand,\n      category: global.itemCategory,\n      stores: global.itemStore,\n      authorID: global.myUserString,\n      createdAt: timestamp,\n      photo: global.itemPhoto\n    };\n    entityRef\n      .add(data)\n      .then(_doc => {\n        setEntityText('')\n        Keyboard.dismiss()\n      })\n      .catch((error) => {\n        alert(error)\n      });\n  }\n\n\n  return (\n\n    <View style={styles.MainContainer}>\n\n\n      <FlatList\n        data={sortedData}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item }) =>\n          <View>\n            <Text style={styles.row}>{item.title}</Text>\n            <Text style={styles.row}>{item.description}</Text>\n         \n            <View>\n              <Image\n                style={styles.tinyLogo}\n                source={{\n                  uri: item.photo,\n                }}\n              />\n            </View>\n          </View>\n        }\n        style={{ marginTop: 10 }} />\n\n\n    \n        {itemIsFavorite === true? (\n      <Text> This item is already a favorite of yours!</Text>\n        ): (\n          <Button title=\"Add to Favorites\" onPress={onAddButtonPress} />\n        )}\n\n    </View>\n  );\n}\n\n\n\n\nProductDetailScreen.navigationOptions = navigationData => {\n\n  global.itemTitle = navigationData.navigation.getParam('itemTitle');\n  global.itemId = navigationData.navigation.getParam('itemId');\n  global.itemDescription = navigationData.navigation.getParam(\"itemDescription\");\n  global.itemPhoto = navigationData.navigation.getParam(\"itemPhoto\");\n  global.itemStore = navigationData.navigation.getParam(\"itemStore\");\n  global.itemBrand = navigationData.navigation.getParam(\"itemBrand\");\n  global.itemCategory = navigationData.navigation.getParam(\"itemCategory\");\n\n\n\n\n  return {\n    headerTitle: itemTitle,\n\n\n\n  };\n};\n\n\nconst styles = StyleSheet.create({\n\n  MainContainer: {\n    justifyContent: 'center',\n    flex: 1,\n    margin: 5,\n\n  },\n  tinyLogo: {\n    width: 50,\n    height: 50,\n  },\n\n  row: {\n    fontSize: 18,\n    padding: 12\n  },\n\n  textInput: {\n\n    textAlign: 'center',\n    height: 42,\n    borderWidth: 1,\n    borderColor: '#009688',\n    borderRadius: 8,\n    backgroundColor: \"#FFFF\"\n\n  }\n});\n\nexport default ProductDetailScreen;"]},"metadata":{},"sourceType":"module"}