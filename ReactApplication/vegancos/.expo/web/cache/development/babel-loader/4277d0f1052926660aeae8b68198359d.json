{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/pandemona/Documents/From Backup/Vegaani_Application/ReactApplication/vegancos/screens/user/UserloginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from \"../../database/firebaseDb\";\nimport Colors from \"../../constants/Colors\";\nimport Card from \"../../components/Card\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this);\n\n    _this.updateInputVal = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.userLogin = function () {\n      if (_this.state.email === '' && _this.state.password === '') {\n        Alert.alert('Enter details to signin!');\n      } else {\n        _this.setState({\n          isLoading: true\n        });\n\n        firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function (res) {\n          console.log(res);\n          console.log('User logged-in successfully!');\n\n          _this.setState({\n            isLoading: false,\n            email: '',\n            password: ''\n          });\n\n          _this.props.navigation.navigate('Home');\n        }).catch(function (error) {\n          return Alert.alert(\"Looks like you've entered invalid login details!\");\n        }, _this.setState({\n          errorMessage: 'looks like something went wrong',\n          isLoading: false,\n          error: true\n        }));\n      }\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      isLoading: false,\n      errorMessage: '',\n      error: true\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.background,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 4\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, React.createElement(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChangeText: function onChangeText(val) {\n          return _this2.updateInputVal(val, 'email');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(val) {\n          return _this2.updateInputVal(val, 'password');\n        },\n        maxLength: 15,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        color: \"#000\",\n        title: \"Signin\",\n        onPress: function onPress() {\n          return _this2.userLogin();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.loginText,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('SignUp');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"Don't have account? Click here to signup\"), React.createElement(Text, {\n        style: styles.loginText,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Password');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, \"Have you forgotten your password?\"))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    backgroundColor: Colors.background\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 35\n  },\n  card: {\n    padding: 15\n  },\n  inputStyle: {\n    width: '100%',\n    marginBottom: 15,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderBottomWidth: 1\n  },\n  loginText: {\n    color: '#000',\n    marginTop: 25,\n    textAlign: 'center'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#000'\n  }\n});","map":{"version":3,"sources":["/Users/pandemona/Documents/From Backup/Vegaani_Application/ReactApplication/vegancos/screens/user/UserloginScreen.js"],"names":["React","Component","firebase","Colors","Card","Login","updateInputVal","val","prop","state","setState","userLogin","email","password","Alert","alert","isLoading","auth","signInWithEmailAndPassword","then","res","console","log","props","navigation","navigate","catch","error","errorMessage","styles","preloader","background","container","card","inputStyle","loginText","StyleSheet","create","flex","backgroundColor","flexDirection","justifyContent","padding","width","marginBottom","paddingBottom","alignSelf","borderBottomWidth","color","marginTop","textAlign","left","right","top","bottom","position","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ActivityIndicator } from 'react-native';\nimport firebase from '../../database/firebaseDb';\nimport Colors from '../../constants/Colors';\nimport Card from '../../components/Card';\n\n\nexport default class Login extends Component {\n  \n  constructor() {\n    super();\n    this.state = { \n      email: '', \n      password: '',\n      isLoading: false,\n      errorMessage: '',\n      error: true,\n    }\n  }\n\n  updateInputVal = (val, prop) => {\n    const state = this.state;\n    state[prop] = val;\n    this.setState(state);\n  }\n\n  userLogin = () => {\n    if(this.state.email === '' && this.state.password === '') {\n      Alert.alert('Enter details to signin!')\n    } else {\n      this.setState({\n        isLoading: true,\n      })\n      firebase\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then((res) => {\n        console.log(res)\n        console.log('User logged-in successfully!')\n        this.setState({\n          isLoading: false,\n          email: '', \n          password: ''\n        })\n        this.props.navigation.navigate('Home')\n      })\n      .catch(  error => Alert.alert(\"Looks like you've entered invalid login details!\"),\n      this.setState({\n      errorMessage: 'looks like something went wrong',\n      isLoading: false,\n      error: true,\n      }))\n    }\n  }\n\n  render() {\n    if(this.state.isLoading){\n      return(\n        <View style={styles.preloader}>\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\n        </View>\n      )\n    }    \n    return (\n   <View style={styles.background}>\n  \n      <View style={styles.container}>  \n      <Card style={styles.card}>\n        <TextInput\n          style={styles.inputStyle}\n          placeholder=\"Email\"\n          value={this.state.email}\n          onChangeText={(val) => this.updateInputVal(val, 'email')}\n        />\n        <TextInput\n          style={styles.inputStyle}\n          placeholder=\"Password\"\n          value={this.state.password}\n          onChangeText={(val) => this.updateInputVal(val, 'password')}\n          maxLength={15}\n          secureTextEntry={true}\n        />   \n        <Button\n          color=\"#000\"\n          title=\"Signin\"\n          onPress={() => this.userLogin()}\n        />   \n\n        <Text \n          style={styles.loginText}\n          onPress={() => this.props.navigation.navigate('SignUp')}>\n          Don't have account? Click here to signup\n        </Text>    \n\n        <Text style={styles.loginText}\n         onPress={() => this.props.navigation.navigate('Password')}>\n           Have you forgotten your password?</Text>   \n           </Card>                   \n      </View>\n\n      </View>\n      \n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  background: {\n flex: 1,\n backgroundColor: Colors.background,\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 35,\n \n  \n  },\n  card: {\n    padding: 15,\n  },\n  inputStyle: {\n    width: '100%',\n    marginBottom: 15,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderBottomWidth:1,\n   \n  },\n  loginText: {\n    color: '#000',\n    marginTop: 25,\n    textAlign: 'center'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#000'\n  },\n\n});"]},"metadata":{},"sourceType":"module"}