{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pandemona/Documents/From Backup/Vegaani_Application/ReactApplication/vegancos/navigation/ProductsNavigator.js\";\n\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState } from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator, createBottomTapNavigator } from 'react-navigation-tabs';\nimport { createAppContainer } from 'react-navigation';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createSwitchNavigator } from 'react-navigation';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport CategoryProductsScreen from \"../screens/CategoryProductsScreen\";\nimport ProductDetailScreen from \"../screens/ProductDetailScreen\";\nimport FavoritesScreen from \"../screens/FavoritesScreen\";\nimport UsersignupScreen from \"../screens/user/UsersignupScreen\";\nimport AddSuggestion from \"../screens/user/AddSuggestion\";\nimport ShowSuggestion from \"../screens/user/ShowSuggestion\";\nimport FAQScreen from \"../screens/FAQScreen\";\nimport DeleteScreen from \"../screens/user/DeleteScreen\";\nimport UserloginScreen from \"../screens/user/UserloginScreen\";\nimport PasswordForgottenScreen from \"../screens/user/PasswordForgottenScreen\";\nimport Colors from \"../constants/Colors\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport MakeUpScreen from \"../screens/MakeUpScreen\";\nimport firebase from 'firebase';\nimport FavoriteScreen from \"../screens/FavoritesScreen\";\n\nfunction signout() {\n  return _regeneratorRuntime.async(function signout$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n        case 3:\n          Alert.alert(\"You're logged out\");\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\n\nvar defaultStackNavOptions = {\n  headerStyle: {\n    backgroundColor: Colors.background\n  },\n  headerTintColor: 'black',\n  gesturesEnabled: true\n};\nvar ProductsNavigator = createStackNavigator({\n  Home: {\n    screen: HomeScreen,\n    headerShown: false\n  },\n  CategoryProduct: {\n    screen: CategoryProductsScreen\n  },\n  ProductDetail: {\n    screen: ProductDetailScreen\n  },\n  MakeUp: MakeUpScreen,\n  AddSuggestion: AddSuggestion,\n  Favorites: FavoritesScreen,\n  ShowSuggestion: ShowSuggestion,\n  FAQ: FAQScreen,\n  SignUp: UsersignupScreen,\n  Login: UserloginScreen,\n  Delete: DeleteScreen,\n  Password: PasswordForgottenScreen\n}, {\n  defaultNavigationOptions: defaultStackNavOptions\n});\nvar tabScreenConfig = {\n  Products: {\n    screen: ProductsNavigator,\n    navigationOptions: {\n      tabBarColor: \"#251e3e\"\n    }\n  },\n  About: {\n    screen: FAQScreen,\n    navigationOptions: {\n      tabBarColor: \"#251e3e\"\n    }\n  }\n};\nvar ProductFavTabNavigator = Platform.OS === 'android' ? createMaterialBottomTabNavigator(tabScreenConfig, {\n  activeTintColor: 'white',\n  barStyle: {\n    backgroundColor: \"#CCC\"\n  }\n}) : createBottomTabNavigator(tabScreenConfig, {\n  tabBarOptions: {\n    activeTintColor: \"black\"\n  }\n});\nvar MyNavigator = createDrawerNavigator({\n  Home: {\n    screen: ProductFavTabNavigator,\n    navigationOptions: {\n      drawerLabel: 'Home'\n    }\n  },\n  Favorites: FavoritesScreen\n}, {\n  contentOptions: {},\n  contentComponent: function contentComponent(props) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, React.createElement(SafeAreaView, {\n      forceInset: {\n        bottom: 'always',\n        horizontal: 'never'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        props.navigation.navigate('Home');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \" Home\")), React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        props.navigation.navigate('AddSuggestion');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, \" Suggest something\")), React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        props.navigation.navigate('ShowSuggestion');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 26\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, \" Show my Suggestions\")), React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        props.navigation.navigate('Favorites');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 16\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \" Favorites\")), React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        props.navigation.navigate('FAQ');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, \"FAQ\")), React.createElement(View, {\n      style: styles.bottom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        props.navigation.navigate('Login');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 20\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \" SignUp / Login\")), React.createElement(TouchableOpacity, {\n      style: styles.touchable,\n      onPress: function onPress() {\n        return signout();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"Logout\"))))));\n  }\n});\nvar MainNavigator = createSwitchNavigator({\n  Shop: MyNavigator\n});\nvar styles = StyleSheet.create({\n  touchable: {\n    height: 40,\n    borderBottomWidth: 2,\n    paddingTop: 5,\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  container: {\n    flex: 1,\n    paddingTop: 0\n  },\n  bottom: {\n    paddingTop: 100\n  }\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["/Users/pandemona/Documents/From Backup/Vegaani_Application/ReactApplication/vegancos/navigation/ProductsNavigator.js"],"names":["React","useState","createStackNavigator","createBottomTabNavigator","createBottomTapNavigator","createAppContainer","Ionicons","createMaterialBottomTabNavigator","createDrawerNavigator","createSwitchNavigator","HomeScreen","CategoryProductsScreen","ProductDetailScreen","FavoritesScreen","UsersignupScreen","AddSuggestion","ShowSuggestion","FAQScreen","DeleteScreen","UserloginScreen","PasswordForgottenScreen","Colors","TouchableOpacity","MakeUpScreen","firebase","FavoriteScreen","signout","auth","signOut","Alert","alert","console","log","defaultStackNavOptions","headerStyle","backgroundColor","background","headerTintColor","gesturesEnabled","ProductsNavigator","Home","screen","headerShown","CategoryProduct","ProductDetail","MakeUp","Favorites","FAQ","SignUp","Login","Delete","Password","defaultNavigationOptions","tabScreenConfig","Products","navigationOptions","tabBarColor","About","ProductFavTabNavigator","Platform","OS","activeTintColor","barStyle","tabBarOptions","MyNavigator","drawerLabel","contentOptions","contentComponent","props","styles","container","bottom","horizontal","touchable","navigation","navigate","MainNavigator","Shop","StyleSheet","create","height","borderBottomWidth","paddingTop","alignItems","alignContent","flex"],"mappings":"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","sourcesContent":["import { Alert, Platform , StyleSheet} from 'react-native';\nimport React, {useState} from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport {createBottomTabNavigator, createBottomTapNavigator} from 'react-navigation-tabs';\nimport {createAppContainer} from 'react-navigation';\nimport {Ionicons} from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator} from 'react-navigation-material-bottom-tabs'\nimport { createDrawerNavigator} from 'react-navigation-drawer';\nimport {Text, View, Button, SafeAreaView} from 'react-native';\nimport {createSwitchNavigator} from 'react-navigation';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport CategoryProductsScreen from '../screens/CategoryProductsScreen';\nimport ProductDetailScreen from '../screens/ProductDetailScreen';\nimport FavoritesScreen from '../screens/FavoritesScreen';\nimport UsersignupScreen from '../screens/user/UsersignupScreen';\nimport AddSuggestion from '../screens/user/AddSuggestion';\nimport ShowSuggestion from '../screens/user/ShowSuggestion';\nimport FAQScreen from '../screens/FAQScreen';\nimport DeleteScreen from '../screens/user/DeleteScreen';\nimport UserloginScreen from '../screens/user/UserloginScreen';\nimport PasswordForgottenScreen from '../screens/user/PasswordForgottenScreen';\nimport Colors from '../constants/Colors';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport MakeUpScreen from '../screens/MakeUpScreen';\nimport firebase from 'firebase';\nimport FavoriteScreen from '../screens/FavoritesScreen';\n\n\nasync function signout() {\n  try {\n      await firebase.auth().signOut();\n     Alert.alert(\"You're logged out\")\n\n  } catch (e) {\n      console.log(e);\n  }\n}\n\n\n\n\n\nconst defaultStackNavOptions = {\n  headerStyle: {\n    backgroundColor: Colors.background, \n  },\n  headerTintColor: 'black',\n  gesturesEnabled: true,\n\n};\n\nconst ProductsNavigator = createStackNavigator  (\n  {\n    Home: {\n      screen: HomeScreen,\n     headerShown: false,\n    },\n    CategoryProduct: {\n      screen: CategoryProductsScreen\n    },\n    ProductDetail: {\n      screen: ProductDetailScreen,\n    \n    },\n  \n    MakeUp: MakeUpScreen,\n    AddSuggestion: AddSuggestion,\n    Favorites: FavoritesScreen,\n    ShowSuggestion: ShowSuggestion,\n    FAQ: FAQScreen,\n\n    SignUp: UsersignupScreen,\n    Login: UserloginScreen,\n    Delete: DeleteScreen,\n    Password: PasswordForgottenScreen,\n    \n   \n  },\n  {\n    defaultNavigationOptions: defaultStackNavOptions\n   \n  }\n);\n \n\n\nconst tabScreenConfig = {\n  Products: {\n    screen: ProductsNavigator,\n    navigationOptions: {\n      tabBarColor: \"#251e3e\"\n    }\n  },\n  About: {\n    screen: FAQScreen,\n    navigationOptions: {\n     \n      tabBarColor: \"#251e3e\"\n    }\n    \n  }\n  \n};\n\nconst ProductFavTabNavigator =\n  Platform.OS === 'android'\n    ? createMaterialBottomTabNavigator(tabScreenConfig, {\n        activeTintColor: 'white',\n        barStyle: {\n          backgroundColor: \"#CCC\"\n        }\n      })\n    : createBottomTabNavigator(tabScreenConfig, {\n        tabBarOptions: {\n          activeTintColor: \"black\"\n        }\n      });\n\n      \n      \n      const MyNavigator = createDrawerNavigator(\n        {\n          Home: {\n            screen: ProductFavTabNavigator,\n            navigationOptions: {\n              drawerLabel: 'Home'\n            }\n          },\n         \n          Favorites: FavoritesScreen,\n        \n        },\n         \n        {\n          contentOptions: {\n          \n          },\n          contentComponent: props => {\n        \n            return (\n             \n              <View style={styles.container}>\n               \n                <SafeAreaView forceInset={{ bottom: 'always', horizontal: 'never' }}>\n                <View>\n                <TouchableOpacity\n                style={styles.touchable}\n                    onPress={() => {\n                      props.navigation.navigate('Home');\n                    }}\n                  >\n                    <Text> Home</Text>\n                  </TouchableOpacity>\n                    <TouchableOpacity\n                    style={styles.touchable}\n                    onPress={() => {\n                      props.navigation.navigate('AddSuggestion');\n                    }}\n                  > \n                  <Text> Suggest something</Text>\n                  </TouchableOpacity>\n                         <TouchableOpacity\n                    style={styles.touchable}\n                    onPress={() => {\n                      props.navigation.navigate('ShowSuggestion');\n                    }}\n                  >\n                    <Text> Show my Suggestions</Text>\n                    </TouchableOpacity>\n               <TouchableOpacity\n                    style={styles.touchable}\n                    onPress={() => {\n                      props.navigation.navigate('Favorites');\n                    }}\n                  > \n                  <Text> Favorites</Text>\n                  </TouchableOpacity>\n                    <TouchableOpacity\n                    style={styles.touchable}\n                    onPress={() => {\n                      props.navigation.navigate('FAQ');\n                    }}\n                  >\n                    <Text>FAQ</Text>\n                    </TouchableOpacity>\n                 \n                    <View style={styles.bottom}>\n               \n                   <TouchableOpacity\n                    style={styles.touchable}\n                    onPress={() => {\n                      props.navigation.navigate('Login');\n                    }}\n                > \n                <Text> SignUp / Login</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={styles.touchable}\n                    onPress={() => signout()}\n                > \n                <Text>Logout</Text>\n                </TouchableOpacity>\n                </View>\n                 </View>\n                </SafeAreaView>\n              </View>\n           \n            );\n          }\n        }\n      );\n  \n    \n      \n      const MainNavigator = createSwitchNavigator({\n        Shop: MyNavigator\n      });\n  \n      const styles = StyleSheet.create({\n        touchable: {\n          height: 40,\n          borderBottomWidth: 2,\n          paddingTop: 5,\n          alignItems: 'center',\n          alignContent: 'center',\n         \n        },\n        container: {\n          flex: 1,\n          paddingTop: 0,\n        },\n        bottom: {\n          paddingTop: 100,\n        }\n      });\nexport default createAppContainer(MainNavigator);\n"]},"metadata":{},"sourceType":"module"}