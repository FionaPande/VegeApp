{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/fionaneumann/Documents/React/Project/vegancos/navigation/TestNavigator.js\";\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState } from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator, createBottomTapNavigator } from 'react-navigation-tabs';\nimport { createAppContainer } from 'react-navigation';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs';\nimport { createDrawerNavigator } from 'react-navigation-drawer';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { createSwitchNavigator } from 'react-navigation';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport CategoryProductsScreen from \"../screens/CategoryProductsScreen\";\nimport ProductDetailScreen from \"../screens/ProductDetailScreen\";\nimport FavoritesScreen from \"../screens/FavoritesScreen\";\nimport UserloginScreen from \"../screens/user/UserloginSreen\";\nimport UsersignupScreen from \"../screens/user/UsersignupScreen\";\nimport DashboardScreen from \"../screens/user/DashboardScreen\";\nimport StartupScreen from \"../screens/StartupScreen\";\nimport * as authActions from \"../store/authaction\";\nimport { useDispatch } from 'react-redux';\nvar defaultStackNavOptions = {\n  headerStyle: {\n    backgroundColor: '#CCCFavor'\n  },\n  headerTintColor: 'white',\n  gesturesEnabled: true\n};\nvar ProductsNavigator = createStackNavigator({\n  Home: {\n    screen: HomeScreen,\n    headerShown: false\n  },\n  CategoryProduct: {\n    screen: CategoryProductsScreen\n  },\n  ProductDetail: {\n    screen: ProductDetailScreen\n  },\n  Login: UserloginScreen,\n  SignUp: UsersignupScreen,\n  DashBoard: DashboardScreen,\n  Favorites: FavoritesScreen\n}, {\n  defaultNavigationOptions: defaultStackNavOptions\n});\nvar tabScreenConfig = {\n  Products: {\n    screen: ProductsNavigator,\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(tabInfo) {\n        return React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 10\n          }\n        }, \" Hello\");\n      },\n      tabBarColor: \"#CCC\"\n    }\n  },\n  Favorites: {\n    screen: FavoritesScreen,\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(tabInfo) {\n        return React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 10\n          }\n        }, \" Hello\");\n      },\n      tabBarColor: \"#CCC\"\n    }\n  }\n};\nvar ProductFavTabNavigator = Platform.OS === 'android' ? createMaterialBottomTabNavigator(tabScreenConfig, {\n  activeTintColor: 'black',\n  shifting: true,\n  barStyle: {\n    backgroundColor: \"#CCC\"\n  }\n}) : createBottomTabNavigator(tabScreenConfig, {\n  tabBarOptions: {\n    activeTintColor: \"black\"\n  }\n});\nvar MyNavigator = createDrawerNavigator({\n  Home: {\n    screen: ProductFavTabNavigator,\n    navigationOptions: {\n      drawerLabel: 'Home'\n    }\n  },\n  Favorites: FavoritesScreen,\n  Dashboard: DashboardScreen\n}, {\n  contentOptions: {},\n  contentComponent: function contentComponent(props) {\n    var dispatch = useDispatch();\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, React.createElement(SafeAreaView, {\n      forceInset: {\n        bottom: 'always',\n        horizontal: 'never'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, React.createElement(Button, {\n      title: \"Home\",\n      onPress: function onPress() {\n        props.navigation.navigate('Home');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), React.createElement(Button, {\n      title: \"Dashboard\",\n      onPress: function onPress() {\n        props.navigation.navigate('Dashboard');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), React.createElement(Button, {\n      title: \"Favorites\",\n      onPress: function onPress() {\n        props.navigation.navigate('Favorites');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), React.createElement(Button, {\n      title: \"Logout\",\n      onPress: function onPress() {\n        dispatch(authActions.logout());\n        props.navigation.navigate('Auth');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    })));\n  }\n});\nvar AuthNavigator = createStackNavigator({\n  Auth: UsersignupScreen\n});\nvar MainNavigator = createSwitchNavigator({\n  Startup: StartupScreen,\n  Auth: AuthNavigator,\n  Shop: MyNavigator\n});\nexport default createAppContainer(MainNavigator);","map":{"version":3,"sources":["/Users/fionaneumann/Documents/React/Project/vegancos/navigation/TestNavigator.js"],"names":["React","useState","createStackNavigator","createBottomTabNavigator","createBottomTapNavigator","createAppContainer","Ionicons","createMaterialBottomTabNavigator","createDrawerNavigator","createSwitchNavigator","HomeScreen","CategoryProductsScreen","ProductDetailScreen","FavoritesScreen","UserloginScreen","UsersignupScreen","DashboardScreen","StartupScreen","authActions","useDispatch","defaultStackNavOptions","headerStyle","backgroundColor","headerTintColor","gesturesEnabled","ProductsNavigator","Home","screen","headerShown","CategoryProduct","ProductDetail","Login","SignUp","DashBoard","Favorites","defaultNavigationOptions","tabScreenConfig","Products","navigationOptions","tabBarIcon","tabInfo","tabBarColor","ProductFavTabNavigator","Platform","OS","activeTintColor","shifting","barStyle","tabBarOptions","MyNavigator","drawerLabel","Dashboard","contentOptions","contentComponent","props","dispatch","flex","paddingTop","bottom","horizontal","navigation","navigate","logout","AuthNavigator","Auth","MainNavigator","Startup","Shop"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport React, {useState} from 'react';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport {createBottomTabNavigator, createBottomTapNavigator} from 'react-navigation-tabs';\n\nimport {createAppContainer} from 'react-navigation';\nimport {Ionicons} from '@expo/vector-icons';\nimport { createMaterialBottomTabNavigator} from 'react-navigation-material-bottom-tabs'\nimport { createDrawerNavigator} from 'react-navigation-drawer';\nimport {Text, View, Button, SafeAreaView} from 'react-native';\nimport {createSwitchNavigator} from 'react-navigation';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport CategoryProductsScreen from '../screens/CategoryProductsScreen';\nimport ProductDetailScreen from '../screens/ProductDetailScreen';\nimport FavoritesScreen from '../screens/FavoritesScreen';\nimport UserloginScreen from '../screens/user/UserloginSreen';\nimport UsersignupScreen from '../screens/user/UsersignupScreen';\nimport DashboardScreen from '../screens/user/DashboardScreen';\n\nimport StartupScreen from '../screens/StartupScreen';\nimport * as authActions from '../store/authaction';\nimport {useDispatch} from 'react-redux';\n\n\n\n\n\n\nconst defaultStackNavOptions = {\n  headerStyle: {\n    backgroundColor: '#CCCFavor', \n  },\n  headerTintColor: 'white',\n  gesturesEnabled: true,\n\n  \n};\n\n\n\n\n\nconst ProductsNavigator = createStackNavigator  (\n  {\n    Home: {\n      screen: HomeScreen,\n     headerShown: false,\n    },\n    CategoryProduct: {\n      screen: CategoryProductsScreen\n    },\n    ProductDetail: {\n      screen: ProductDetailScreen,\n    \n    },\n    Login: UserloginScreen,\n    SignUp: UsersignupScreen,\n    DashBoard: DashboardScreen,\n    \n    Favorites: FavoritesScreen,\n   \n  },\n  {\n    defaultNavigationOptions: defaultStackNavOptions\n   \n  }\n);\n \n\n\nconst tabScreenConfig = {\n  Products: {\n    screen: ProductsNavigator,\n    navigationOptions: {\n      tabBarIcon: tabInfo => {\n        return (\n         <Text> Hello</Text>\n        );\n      },\n      tabBarColor: \"#CCC\"\n    }\n  },\n  Favorites: {\n    \n    screen: FavoritesScreen,\n    navigationOptions: {\n      tabBarIcon: tabInfo => {\n        return (\n         <Text> Hello</Text>\n        );\n      },\n      tabBarColor: \"#CCC\"\n    }\n  }\n};\n\nconst ProductFavTabNavigator =\n  Platform.OS === 'android'\n    ? createMaterialBottomTabNavigator(tabScreenConfig, {\n        activeTintColor: 'black',\n        shifting: true,\n        barStyle: {\n          backgroundColor: \"#CCC\"\n        }\n      })\n    : createBottomTabNavigator(tabScreenConfig, {\n        tabBarOptions: {\n          activeTintColor: \"black\"\n        }\n      });\n\n      \n      \n      const MyNavigator = createDrawerNavigator(\n        {\n          Home: {\n            screen: ProductFavTabNavigator,\n            navigationOptions: {\n              drawerLabel: 'Home'\n            }\n          },\n         \n          Favorites: FavoritesScreen,\n          Dashboard: DashboardScreen,\n        \n        },\n         \n        {\n          contentOptions: {\n          \n          },\n          contentComponent: props => {\n            const dispatch = useDispatch();\n            return (\n              <View style={{ flex: 1, paddingTop: 20 }}>\n                <SafeAreaView forceInset={{ bottom: 'always', horizontal: 'never' }}>\n                <Button\n                    title=\"Home\"\n                    onPress={() => {\n                      props.navigation.navigate('Home');\n                    }}\n                  />\n                    <Button\n                    title=\"Dashboard\"\n                    onPress={() => {\n                      props.navigation.navigate('Dashboard');\n                    }}\n                  />\n                <Button\n                    title=\"Favorites\"\n                    onPress={() => {\n                      props.navigation.navigate('Favorites');\n                    }}\n                  />\n                  <Button\n                    title=\"Logout\"\n                    onPress={() => {\n                      dispatch(authActions.logout());\n                      props.navigation.navigate('Auth');\n                    }}\n                  />\n                 \n                </SafeAreaView>\n              </View>\n            );\n          }\n        }\n      );\n  \n      const AuthNavigator = createStackNavigator(\n        {\n          Auth: UsersignupScreen\n        },\n       \n      );\n      \n      const MainNavigator = createSwitchNavigator({\n        Startup: StartupScreen,\n        Auth: AuthNavigator,\n        Shop: MyNavigator\n      });\n  \nexport default createAppContainer(MainNavigator);\n"]},"metadata":{},"sourceType":"module"}