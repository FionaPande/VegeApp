{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/pandemona/Documents/From Backup/Vegaani_Application/ReactApplication/vegancos/screens/MakeUpScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as firebase from 'firebase';\nimport CategoryCards from \"../components/CategoryCards\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../components/HeaderButton\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/Colors\";\n\nvar MakeUpScreen = function MakeUpScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasError = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      someError = _useState4[0],\n      setSomeErrors = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      test = _useState10[0],\n      setTest = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cate = _useState12[0],\n      setCate = _useState12[1];\n\n  var user = firebase.auth().currentUser;\n  var name, email, uid;\n\n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    uid = user.uid;\n    global.uid = JSON.stringify(uid);\n    console.log(global.uid);\n  }\n\n  function fetchCategories() {\n    var res, _data, filtered;\n\n    return _regeneratorRuntime.async(function fetchCategories$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = null;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8000/vegan/categories/\"));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            setErrors(true);\n\n          case 10:\n            _context.prev = 10;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 13:\n            _data = _context.sent;\n            setCate(_data);\n            filtered = _data.filter(function (d) {\n              return d.pk > 10;\n            });\n            setCate(filtered);\n            global.categories = cate;\n            _context.next = 24;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t1 = _context[\"catch\"](10);\n            setErrors(true);\n            setSomeErrors(\"ERROR: \" + hasError + \" my error \" + _context.t1);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 7], [10, 20]], Promise);\n  }\n\n  function fetchData() {\n    var res, responseData;\n    return _regeneratorRuntime.async(function fetchData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            res = null;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:8000/vegan/products/\"));\n\n          case 4:\n            res = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](1);\n            setErrors(true);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 13:\n            responseData = _context2.sent;\n            setData(responseData);\n            global.myData = responseData;\n            _context2.next = 22;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t1 = _context2[\"catch\"](10);\n            setErrors(true);\n            setSomeErrors(\"ERROR: \" + hasError + \" my error \" + _context2.t1);\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 7], [10, 18]], Promise);\n  }\n\n  useEffect(function () {\n    if (isLoading == true) {\n      setLoading(false);\n      fetchData();\n      fetchCategories();\n    }\n  });\n\n  if (isLoading == true) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        padding: 20,\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#00ff00\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  } else if (hasError) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        padding: 20,\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"You're probably not connected to the internet\"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"\" + someError));\n  } else {\n    var renderGridItem = function renderGridItem(itemData) {\n      return React.createElement(CategoryCards, {\n        style: styles.authContainer,\n        title: itemData.item.fields.catID,\n        onSelect: function onSelect() {\n          props.navigation.navigate({\n            routeName: 'CategoryProduct',\n            params: {\n              categoryId: itemData.item.pk,\n              categoryTitle: itemData.item.fields.catID\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      });\n    };\n\n    return React.createElement(View, {\n      style: styles.screen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.welcome,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.suggText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \" Hello \", name)), React.createElement(FlatList, {\n      keyExtractor: function keyExtractor(item, index) {\n        return item.pk;\n      },\n      data: cate,\n      renderItem: renderGridItem,\n      numColumns: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  ;\n};\n\nMakeUpScreen.navigationOptions = function (navData) {\n  return {\n    headerTitle: 'Make Up'\n  };\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    paddingTop: 10,\n    backgroundColor: Colors.background\n  },\n  card: {\n    padding: 5,\n    width: '90%',\n    marginBottom: 20,\n    opacity: 0.8,\n    backgroundColor: Colors.background,\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  authContainer: {\n    width: '90%',\n    maxWidth: 600,\n    maxHeight: 50,\n    padding: 7,\n    alignContent: 'center',\n    alignSelf: 'center',\n    textAlign: \"center\"\n  },\n  suggText: {\n    padding: 5,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    fontSize: 20,\n    color: Colors.primaryText\n  },\n  welcome: {\n    alignItems: 'center'\n  },\n  text: {\n    padding: 5,\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    color: Colors.primaryText\n  }\n});\nexport default MakeUpScreen;","map":{"version":3,"sources":["/Users/pandemona/Documents/From Backup/Vegaani_Application/ReactApplication/vegancos/screens/MakeUpScreen.js"],"names":["React","useState","useEffect","firebase","CategoryCards","LinearGradient","HeaderButtons","Item","HeaderButton","Card","Colors","MakeUpScreen","props","hasError","setErrors","someError","setSomeErrors","data","setData","isLoading","setLoading","test","setTest","cate","setCate","user","auth","currentUser","name","email","uid","displayName","global","JSON","stringify","console","log","fetchCategories","res","fetch","json","filtered","filter","d","pk","categories","fetchData","responseData","myData","flex","padding","justifyContent","renderGridItem","itemData","styles","authContainer","item","fields","catID","navigation","navigate","routeName","params","categoryId","categoryTitle","screen","welcome","suggText","index","navigationOptions","navData","headerTitle","StyleSheet","create","paddingTop","backgroundColor","background","card","width","marginBottom","opacity","alignItems","alignContent","maxWidth","maxHeight","alignSelf","textAlign","fontSize","color","primaryText","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {View, Text, FlatList, StyleSheet, ActivityIndicator} from 'react-native';\nimport * as firebase from 'firebase';\n\nimport CategoryCards from '../components/CategoryCards';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from '../components/HeaderButton';\nimport Card from '../components/Card';\nimport Colors from '../constants/Colors'\n\nconst MakeUpScreen = props => {\n  const [hasError, setErrors] = useState(false);\n  const [someError, setSomeErrors] = useState('');\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [test, setTest] = useState(true);\n  const[cate, setCate] = useState([]);\n  var user = firebase.auth().currentUser;\n  var name, email, uid;\n  \n  if (user != null) {\n    name = user.displayName;\n    email = user.email;\n    uid = user.uid;       \n     global.uid =JSON.stringify(uid)\n    console.log(global.uid)\n  }\n\n\n\n  async function fetchCategories() {\n    let res = null;\n    try {\n      res = await fetch(\"http://127.0.0.1:8000/vegan/categories/\");\n    }\n    catch (error) {\n      setErrors(true);\n    }\n    try {\n      const data = await res.json();\n      setCate(data);\n      const filtered = data.filter(d=>d.pk >10)\n        setCate(filtered)\n        global.categories = cate\n       \n   \n    }\n    catch (err) {\n      setErrors(true);\n      setSomeErrors(\"ERROR: \" + hasError + \" my error \" + err);\n    }\n  }\n \n  async function fetchData() {\n    let res = null;\n    try {\n      res = await fetch(\"http://127.0.0.1:8000/vegan/products/\");\n    }\n    catch (error) {\n      setErrors(true);\n    }\n    try {\n      const responseData = await res.json();\n      setData(responseData);\n      global.myData = responseData;\n\n      // sets the data received from restful service as a global object that can be used anywhere\n    }\n    catch (err) {\n      setErrors(true);\n      setSomeErrors(\"ERROR: \" + hasError + \" my error \" + err);\n    }\n  }\n  useEffect(() => {\n    if (isLoading == true) {\n      setLoading(false);\n      fetchData();\n      fetchCategories();\n    }\n  });\n  if (isLoading == true) {\n    // if the data does not get loaded yet, we show an Activity Indicator\n    return (\n      <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\n        <ActivityIndicator size=\"large\" color=\"#00ff00\" />\n      </View>\n    );\n  }\n  else if (hasError) {\n    return (\n      <View style={{ flex: 1, padding: 20, justifyContent: 'center' }}>\n        <Text>You're probably not connected to the internet</Text>\n        <Text>{\"\" + someError}</Text>\n      </View>\n    );\n  }\n  else {\n    const renderGridItem = itemData => {\n      return (\n        \n        <CategoryCards style={styles.authContainer}\n          title={itemData.item.fields.catID}\n          onSelect={() => {\n            props.navigation.navigate({\n              routeName: 'CategoryProduct',\n              params: {\n                categoryId: itemData.item.pk,\n                categoryTitle: itemData.item.fields.catID\n             \n                // we forward the ID and title to the next screen\n              }\n            });\n          }}\n        />\n      );\n    };\n    \n\n    return (\n   \n      <View style={styles.screen}>\n        <View style={styles.welcome}>\n        \n        <Text style={styles.suggText}> Hello {name}</Text>\n     \n        \n       </View>\n       \n    \n          <FlatList\n            keyExtractor={(item, index) => item.pk}\n            data={cate}\n            renderItem={renderGridItem}\n            numColumns={1}\n          />\n     \n      </View>\n  \n\n    );\n  };\n}\nMakeUpScreen.navigationOptions = navData => {\n  return {\n    headerTitle: 'Make Up',\n   \n  };\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    paddingTop: 10,\n    backgroundColor: Colors.background\n  },\n  card: {\n    padding: 5,\n    width: '90%',\n    marginBottom: 20,\n    opacity: 0.8,\n    backgroundColor: Colors.background,\n    alignItems: 'center',\n    alignContent: 'center'\n  },\n  authContainer: {\n    width: '90%',\n    maxWidth: 600,\n    maxHeight: 50,\n    padding: 7,\n    alignContent: 'center',\n    alignSelf: 'center',\n    textAlign: \"center\",\n  },\n  suggText: {\n    padding: 5,   \n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    fontSize: 20,\n   color: Colors.primaryText,\n    \n  },\n  welcome: {\n    alignItems: 'center',\n  },\n  text: {\n    padding: 5,   \n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    color: Colors.primaryText,\n  }\n});\n\nexport default MakeUpScreen;"]},"metadata":{},"sourceType":"module"}