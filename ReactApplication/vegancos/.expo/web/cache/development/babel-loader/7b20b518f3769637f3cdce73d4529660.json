{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/fionaneumann/Documents/React/Project/vegancos/screens/CategoryProductsScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { CATEGORIES } from \"../data/dummy-data\";\n\nvar CategoryProductsScreen = function (_Component) {\n  _inherits(CategoryProductsScreen, _Component);\n\n  var _super = _createSuper(CategoryProductsScreen);\n\n  function CategoryProductsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CategoryProductsScreen);\n\n    _this = _super.call(this, props);\n\n    _this.itemSeparator = function () {\n      return React.createElement(View, {\n        style: {\n          height: .5,\n          width: \"100%\",\n          backgroundColor: \"#000\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this.state = {\n      isLoading: true,\n      text: '',\n      data: []\n    };\n    _this.arrayholder = [];\n    return _this;\n  }\n\n  _createClass(CategoryProductsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var sortedData = global.myData.filter(function (products) {\n        return products.categoryId.indexOf(catId) >= 0;\n      });\n      global.myData = myData;\n      console.log(\"Let's see if this works\" + JSON.stringify(global.myData));\n      this.setState({\n        isLoading: false,\n        data: sortedData\n      }, function () {\n        _this2.arrayholder = global.myData;\n      });\n    }\n  }, {\n    key: \"GetFlatListItem\",\n    value: function GetFlatListItem(title) {\n      console.log(\"Item got pressed\" + title);\n    }\n  }, {\n    key: \"searchData\",\n    value: function searchData(text) {\n      var newData = this.arrayholder.filter(function (item) {\n        var itemData = item.title.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      this.setState({\n        data: newData,\n        text: text\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            paddingTop: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }, React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.MainContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this3.searchData(text);\n        },\n        value: this.state.text,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Search Here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.data,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        ItemSeparatorComponent: this.itemSeparator,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              _this3.props.navigation.navigate({\n                routeName: 'ProductDetail',\n                params: {\n                  itemId: item.id,\n                  itemTitle: item.title,\n                  itemDescription: item.description,\n                  itemPhoto: item.photo,\n                  itemStore: item.stores,\n                  itemBrand: item.brand,\n                  itemCategory: item.category\n                }\n              });\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.row,\n            onPress: _this3.GetFlatListItem.bind(_this3, item.id),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }\n          }, item.id, \"   \", item.title, \" Brand: \", item.brand));\n        },\n        style: {\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return CategoryProductsScreen;\n}(Component);\n\nexport { CategoryProductsScreen as default };\n\nCategoryProductsScreen.navigationOptions = function (navigationData) {\n  global.catId = navigationData.navigation.getParam('categoryId');\n  var catName = navigationData.navigation.getParam('categoryTitle');\n  var selectedCategory = CATEGORIES.find(function (cat) {\n    return cat.id === catId;\n  });\n  return {\n    headerTitle: catName\n  };\n};\n\nvar styles = StyleSheet.create({\n  MainContainer: {\n    justifyContent: 'center',\n    flex: 1,\n    margin: 5\n  },\n  row: {\n    fontSize: 18,\n    padding: 12\n  },\n  textInput: {\n    textAlign: 'center',\n    height: 42,\n    borderWidth: 1,\n    borderColor: '#009688',\n    borderRadius: 8,\n    backgroundColor: \"#FFFF\"\n  }\n});","map":{"version":3,"sources":["/Users/fionaneumann/Documents/React/Project/vegancos/screens/CategoryProductsScreen.js"],"names":["React","Component","useState","TouchableOpacity","CATEGORIES","CategoryProductsScreen","props","itemSeparator","height","width","backgroundColor","state","isLoading","text","data","arrayholder","sortedData","global","myData","filter","products","categoryId","indexOf","catId","console","log","JSON","stringify","setState","title","newData","item","itemData","toUpperCase","textData","flex","paddingTop","styles","MainContainer","textInput","searchData","index","toString","navigation","navigate","routeName","params","itemId","id","itemTitle","itemDescription","description","itemPhoto","photo","itemStore","stores","itemBrand","brand","itemCategory","category","row","GetFlatListItem","bind","marginTop","navigationOptions","navigationData","getParam","catName","selectedCategory","find","cat","headerTitle","StyleSheet","create","justifyContent","margin","fontSize","padding","textAlign","borderWidth","borderColor","borderRadius"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState } from 'react';\nimport { ActivityIndicator, Alert, FlatList, Text, StyleSheet, View, TextInput } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport {CATEGORIES} from '../data/dummy-data';\n \nexport default class CategoryProductsScreen extends Component {\n\n  constructor(props) {\n\n\n    super(props);\n \n    this.state = {\n      isLoading: true,\n      text: '',\n      data: []\n    }\n \n    this.arrayholder = [];\n  }\n  \n  componentDidMount() {\n      const sortedData = global.myData.filter(\n        products => products.categoryId.indexOf(catId) >= 0\n      );\n      global.myData = myData\n      console.log(\"Let's see if this works\" + JSON.stringify(global.myData))\n        this.setState({\n          isLoading: false,\n          data: sortedData,\n          \n        }, () => {\n\n          this.arrayholder = global.myData;\n        }); \n      \n     \n      \n  }\n \n  GetFlatListItem(title) {\n    console.log(\"Item got pressed\" + title)\n  }\n  searchData(text) {\n    const newData = this.arrayholder.filter(item => {\n      const itemData = item.title.toUpperCase();\n      const textData = text.toUpperCase();\n      return itemData.indexOf(textData) > -1\n    });\n    this.setState({\n      data: newData,\n      text: text\n      })\n    }\n \n    itemSeparator = () => {\n      return (\n        <View\n          style={{\n            height: .5,\n            width: \"100%\",\n            backgroundColor: \"#000\",\n          }}\n        />\n      );\n    }\n \n    render() {\n      if (this.state.isLoading) {\n        return (\n          <View style={{flex: 1, paddingTop: 20}}>\n            <ActivityIndicator />\n          </View>\n        );\n      }\n      return (\n        <View style={styles.MainContainer}>\n   \n        <TextInput \n         style={styles.textInput}\n         onChangeText={(text) => this.searchData(text)}\n         value={this.state.text}\n         underlineColorAndroid='transparent'\n         placeholder=\"Search Here\" />\n       \n        <FlatList\n          data={this.state.data}\n          keyExtractor={ (item, index) => index.toString() }\n          ItemSeparatorComponent={this.itemSeparator}\n          renderItem={({ item }) => \n          <TouchableOpacity onPress={() => {\n           this.props.navigation.navigate({\n              routeName: 'ProductDetail',\n              params: {\n                itemId: item.id,\n                itemTitle: item.title,\n                itemDescription: item.description,\n                itemPhoto: item.photo,\n                itemStore: item.stores,\n                itemBrand: item.brand,\n                itemCategory: item.category\n            \n              }\n            });\n          }}>\n          <Text style={styles.row}\n          onPress={this.GetFlatListItem.bind(this, item.id)} >{item.id}   {item.title} Brand: {item.brand}</Text>\n          </TouchableOpacity>}\n          style={{ marginTop: 10 }} />\n \n      </View>\n    );\n  }\n}\nCategoryProductsScreen.navigationOptions = navigationData => {\n  global.catId = navigationData.navigation.getParam('categoryId');\n  const catName = navigationData.navigation.getParam('categoryTitle')\n\n  const selectedCategory = CATEGORIES.find(cat => cat.id === catId);\n\n  return {\n    headerTitle: catName,\n  };\n};\n\n\nconst styles = StyleSheet.create({\n \n  MainContainer: {\n    justifyContent: 'center',\n    flex: 1,\n    margin: 5,\n \n  },\n \n  row: {\n    fontSize: 18,\n    padding: 12\n  },\n \n  textInput: {\n \n    textAlign: 'center',\n    height: 42,\n    borderWidth: 1,\n    borderColor: '#009688',\n    borderRadius: 8,\n    backgroundColor: \"#FFFF\"\n \n  }\n});"]},"metadata":{},"sourceType":"module"}