{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fionaneumann/Documents/React/Project/vegancos/components/CategoryGridTile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\n\nvar CategoryGridTile = function CategoryGridTile(props) {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  return React.createElement(View, {\n    style: styles.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableCmp, {\n    style: {\n      flex: 1\n    },\n    onPress: props.onSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {\n      backgroundColor: props.color\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, props.title))));\n};\n\nvar styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 15,\n    height: 50,\n    borderRadius: 0,\n    borderWidth: 2,\n    borderBottomColor: 'gray',\n    borderTopColor: 'gray',\n    backgroundColor: '#e3e3e4',\n    borderRadius: 20\n  },\n  container: {\n    flex: 1,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOpacity: 0.56,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 10,\n    elevation: 3,\n    padding: 0,\n    marginLeft: 30,\n    marginTop: 6,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  title: {\n    fontSize: 22,\n    textAlign: 'left'\n  }\n});\nexport default CategoryGridTile;","map":{"version":3,"sources":["/Users/fionaneumann/Documents/React/Project/vegancos/components/CategoryGridTile.js"],"names":["React","CategoryGridTile","props","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","styles","gridItem","flex","onSelect","container","backgroundColor","color","title","StyleSheet","create","margin","height","borderRadius","borderWidth","borderBottomColor","borderTopColor","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","elevation","padding","marginLeft","marginTop","justifyContent","alignItems","fontSize","textAlign"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAUA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChC,MAAIC,YAAY,GAAGC,gBAAnB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoB,EAArD,EAAyD;AACvDJ,IAAAA,YAAY,GAAGK,uBAAf;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAkC,IAAA,OAAO,EAAET,KAAK,CAACU,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,kCAAOH,MAAM,CAACI,SAAd,GAA4B;AAAEC,MAAAA,eAAe,EAAEZ,KAAK,CAACa;AAAzB,KAA5B,CADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,KAApB;AAA2B,IAAA,aAAa,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACc,KADT,CAHF,CADF,CADF,CADF;AAaD,CAnBD;;AAqBA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,CADE;AAERQ,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,YAAY,EAAE,CAJN;AAKPC,IAAAA,WAAW,EAAE,CALN;AAMRC,IAAAA,iBAAiB,EAAE,MANX;AAORC,IAAAA,cAAc,EAAE,MAPR;AAQRV,IAAAA,eAAe,EAAE,SART;AASRO,IAAAA,YAAY,EAAE;AATN,GADqB;AAY/BR,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAE,CADG;AAETU,IAAAA,YAAY,EAAE,EAFL;AAGTI,IAAAA,WAAW,EAAE,OAHJ;AAITC,IAAAA,aAAa,EAAE,IAJN;AAKTC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYR,MAAAA,MAAM,EAAE;AAApB,KALL;AAMTS,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,SAAS,EAAE,CAPF;AAQTC,IAAAA,OAAO,EAAE,CARA;AASTC,IAAAA,UAAU,EAAE,EATH;AAUTC,IAAAA,SAAS,EAAE,CAVF;AAWTC,IAAAA,cAAc,EAAE,YAXP;AAYTC,IAAAA,UAAU,EAAE;AAZH,GAZoB;AA0B/BnB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,SAAS,EAAE;AAFN;AA1BwB,CAAlB,CAAf;AAgCA,eAAepC,gBAAf","sourcesContent":["import React from 'react';\nimport {\n  TouchableOpacity,\n  View,\n  Text,\n  StyleSheet,\n  Platform,\n  TouchableNativeFeedback\n} from 'react-native';\n\nconst CategoryGridTile = props => {\n  let TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n  return (\n    <View style={styles.gridItem}>\n      <TouchableCmp style={{ flex: 1 }} onPress={props.onSelect}>\n        <View\n          style={{ ...styles.container, ...{ backgroundColor: props.color } }}\n        >\n          <Text style={styles.title} numberOfLines={1}>\n            {props.title}\n          </Text>\n        </View>\n      </TouchableCmp>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 15,\n    height: 50,\n    borderRadius: 0,\n     borderWidth: 2,\n    borderBottomColor: 'gray',\n    borderTopColor: 'gray',\n    backgroundColor: '#e3e3e4',\n    borderRadius: 20,\n  },\n  container: {\n    flex: 1,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOpacity: 0.56,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 10,\n    elevation: 3,\n    padding: 0,\n    marginLeft: 30,\n    marginTop: 6,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start'\n  },\n  title: {\n    fontSize: 22,\n    textAlign: 'left'\n  }\n});\n\nexport default CategoryGridTile;\n"]},"metadata":{},"sourceType":"module"}