{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/fionaneumann/Documents/React/Project/vegancos/screens/FavoritesScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as firebase from 'firebase';\nexport default function FavoritesScreen(props) {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      entityText = _useState2[0],\n      setEntityText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      entities = _useState4[0],\n      setEntities = _useState4[1];\n\n  var entityRef = firebase.firestore().collection('Favorites');\n  var userID = global.myUserString;\n  useEffect(function () {\n    entityRef.where(\"authorID\", \"==\", userID).onSnapshot(function (querySnapshot) {\n      var newEntities = [];\n      querySnapshot.forEach(function (doc) {\n        var entity = doc.data();\n        entity.id = doc.id;\n        newEntities.push(entity);\n      });\n      setEntities(newEntities);\n      console.log(\"these are your favorites\" + entities);\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n  console.log(\"these are your favorites\" + JSON.stringify(entities));\n\n  var onAddButtonPress = function onAddButtonPress(id) {\n    firebase.firestore().collection('Favorites').doc(id).delete();\n    console.log(\"This is the \" + id);\n  };\n\n  var renderEntity = function renderEntity(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return React.createElement(View, {\n      style: styles.entityContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onLongPress: function onLongPress() {\n        return onAddButtonPress(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.entityText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, index, \". \", item.title, item.id)));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, entities && React.createElement(View, {\n    style: styles.listContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, React.createElement(FlatList, {\n    data: entities,\n    renderItem: renderEntity,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    removeClippedSubviews: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  formContainer: {\n    flexDirection: 'row',\n    height: 80,\n    marginTop: 40,\n    marginBottom: 20,\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 30,\n    paddingRight: 30,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    height: 48,\n    borderRadius: 5,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n    paddingLeft: 16,\n    flex: 1,\n    marginRight: 5\n  },\n  button: {\n    height: 47,\n    borderRadius: 5,\n    backgroundColor: '#788eec',\n    width: 80,\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16\n  },\n  listContainer: {\n    marginTop: 20,\n    padding: 20\n  },\n  entityContainer: {\n    marginTop: 16,\n    borderBottomColor: '#cccccc',\n    borderBottomWidth: 1,\n    paddingBottom: 16\n  },\n  entityText: {\n    fontSize: 20,\n    color: '#333333'\n  }\n});","map":{"version":3,"sources":["/Users/fionaneumann/Documents/React/Project/vegancos/screens/FavoritesScreen.js"],"names":["React","useEffect","useState","firebase","FavoritesScreen","props","entityText","setEntityText","entities","setEntities","entityRef","firestore","collection","userID","global","myUserString","where","onSnapshot","querySnapshot","newEntities","forEach","doc","entity","data","id","push","console","log","error","JSON","stringify","onAddButtonPress","delete","renderEntity","item","index","styles","entityContainer","title","container","listContainer","StyleSheet","create","flex","alignItems","formContainer","flexDirection","height","marginTop","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","justifyContent","input","borderRadius","overflow","backgroundColor","marginRight","button","width","buttonText","color","fontSize","padding","borderBottomColor","borderBottomWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;AAGA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAAA,kBAETH,QAAQ,CAAC,EAAD,CAFC;AAAA;AAAA,MAEtCI,UAFsC;AAAA,MAE1BC,aAF0B;;AAAA,mBAGbL,QAAQ,CAAC,EAAD,CAHK;AAAA;AAAA,MAGtCM,QAHsC;AAAA,MAG5BC,WAH4B;;AAK7C,MAAMC,SAAS,GAAGP,QAAQ,CAACQ,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,CAAlB;AACA,MAAMC,MAAM,GAAGC,MAAM,CAACC,YAAtB;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,SAAS,CACJM,KADL,CACW,UADX,EACuB,IADvB,EAC6BH,MAD7B,EAEKI,UAFL,CAGQ,UAAAC,aAAa,EAAI;AACb,UAAMC,WAAW,GAAG,EAApB;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,UAAAC,GAAG,EAAI;AACzB,YAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,EAAf;AACAD,QAAAA,MAAM,CAACE,EAAP,GAAYH,GAAG,CAACG,EAAhB;AACAL,QAAAA,WAAW,CAACM,IAAZ,CAAiBH,MAAjB;AACH,OAJD;AAKAb,MAAAA,WAAW,CAACU,WAAD,CAAX;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA4BnB,QAAxC;AACH,KAZT,EAaQ,UAAAoB,KAAK,EAAI;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH,KAfT;AAiBH,GAlBQ,EAkBN,EAlBM,CAAT;AAmBAF,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAA4BE,IAAI,CAACC,SAAL,CAAetB,QAAf,CAAxC;;AAEA,MAAMuB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,EAAD,EAAQ;AAChCrB,IAAAA,QAAQ,CAACQ,SAAT,GAAqBC,UAArB,CAAgC,WAAhC,EAA6CS,GAA7C,CAAiDG,EAAjD,EAAqDQ,MAArD;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBH,EAA7B;AAEA,GAJD;;AAMA,MAAMS,YAAY,GAAG,SAAfA,YAAe,OAAmB;AAAA,QAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AACpC,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,WAAW,EAAE;AAAA,eAAMN,gBAAgB,CAACG,IAAI,CAACV,EAAN,CAAtB;AAAA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEY,MAAM,CAAC9B,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK6B,KADL,QACcD,IAAI,CAACI,KADnB,EAEKJ,IAAI,CAACV,EAFV,CADF,CADF,CADJ;AAUH,GAXD;;AAaA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM/B,QAAQ,IACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4B,MAAM,CAACI,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEhC,QADV;AAEI,IAAA,UAAU,EAAEyB,YAFhB;AAGI,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUA,IAAI,CAACV,EAAf;AAAA,KAHlB;AAII,IAAA,qBAAqB,EAAE,IAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CADJ;AAeD;AAID,IAAMY,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADoB;AAK/BC,EAAAA,aAAa,EAAE;AACXC,IAAAA,aAAa,EAAE,KADJ;AAEXC,IAAAA,MAAM,EAAE,EAFG;AAGXC,IAAAA,SAAS,EAAE,EAHA;AAIXC,IAAAA,YAAY,EAAE,EAJH;AAKXN,IAAAA,IAAI,EAAE,CALK;AAMXO,IAAAA,UAAU,EAAE,EAND;AAOXC,IAAAA,aAAa,EAAE,EAPJ;AAQXC,IAAAA,WAAW,EAAE,EARF;AASXC,IAAAA,YAAY,EAAE,EATH;AAUXC,IAAAA,cAAc,EAAE,QAVL;AAWXV,IAAAA,UAAU,EAAE;AAXD,GALgB;AAkB/BW,EAAAA,KAAK,EAAE;AACHR,IAAAA,MAAM,EAAE,EADL;AAEHS,IAAAA,YAAY,EAAE,CAFX;AAGHC,IAAAA,QAAQ,EAAE,QAHP;AAIHC,IAAAA,eAAe,EAAE,OAJd;AAKHN,IAAAA,WAAW,EAAE,EALV;AAMHT,IAAAA,IAAI,EAAE,CANH;AAOHgB,IAAAA,WAAW,EAAE;AAPV,GAlBwB;AA2B/BC,EAAAA,MAAM,EAAE;AACJb,IAAAA,MAAM,EAAE,EADJ;AAEJS,IAAAA,YAAY,EAAE,CAFV;AAGJE,IAAAA,eAAe,EAAE,SAHb;AAIJG,IAAAA,KAAK,EAAE,EAJH;AAKJjB,IAAAA,UAAU,EAAE,QALR;AAMJU,IAAAA,cAAc,EAAE;AANZ,GA3BuB;AAmC/BQ,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE,OADC;AAERC,IAAAA,QAAQ,EAAE;AAFF,GAnCmB;AAuC/BxB,EAAAA,aAAa,EAAE;AACXQ,IAAAA,SAAS,EAAE,EADA;AAEXiB,IAAAA,OAAO,EAAE;AAFE,GAvCgB;AA2C/B5B,EAAAA,eAAe,EAAE;AACbW,IAAAA,SAAS,EAAE,EADE;AAEbkB,IAAAA,iBAAiB,EAAE,SAFN;AAGbC,IAAAA,iBAAiB,EAAE,CAHN;AAIbhB,IAAAA,aAAa,EAAE;AAJF,GA3Cc;AAiD/B7C,EAAAA,UAAU,EAAE;AACR0D,IAAAA,QAAQ,EAAE,EADF;AAERD,IAAAA,KAAK,EAAE;AAFC;AAjDmB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FlatList, Keyboard, Button, Text, TextInput, TouchableOpacity, View, StyleSheet } from 'react-native'\n\nimport * as firebase from 'firebase';\n\nexport default function FavoritesScreen(props) {\n\n  const [entityText, setEntityText] = useState('')\n  const [entities, setEntities] = useState([])\n\n  const entityRef = firebase.firestore().collection('Favorites')\n  const userID = global.myUserString\n\n  useEffect(() => {\n      entityRef\n          .where(\"authorID\", \"==\", userID)\n          .onSnapshot(\n              querySnapshot => {\n                  const newEntities = []\n                  querySnapshot.forEach(doc => {\n                      const entity = doc.data()\n                      entity.id = doc.id\n                      newEntities.push(entity)\n                  });\n                  setEntities(newEntities)\n                  console.log(\"these are your favorites\" +entities)\n              },\n              error => {\n                  console.log(error)\n              }\n          )\n  }, [])\n  console.log(\"these are your favorites\" +JSON.stringify(entities))\n\n  const onAddButtonPress = (id) => {\n   firebase.firestore().collection('Favorites').doc(id).delete();\n   console.log(\"This is the \" + id)\n   \n  }\n\n  const renderEntity = ({item, index}) => {\n      return (\n          <View style={styles.entityContainer}>\n            <TouchableOpacity onLongPress={() => onAddButtonPress(item.id)}>\n              <Text style={styles.entityText}>\n                  {index}. {item.title}\n                  {item.id}\n              </Text>\n              </TouchableOpacity>\n          </View>\n      )\n  }\n\n  return (\n      <View style={styles.container}>\n       \n          { entities && (\n              <View style={styles.listContainer}>\n                  <FlatList\n                      data={entities}\n                      renderItem={renderEntity}\n                      keyExtractor={(item) => item.id}\n                      removeClippedSubviews={true}\n                  />\n              </View>\n          )}\n      </View>\n  )\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n      flex: 1,\n      alignItems: 'center'\n  },\n  formContainer: {\n      flexDirection: 'row',\n      height: 80,\n      marginTop: 40,\n      marginBottom: 20,\n      flex: 1,\n      paddingTop: 10,\n      paddingBottom: 10,\n      paddingLeft: 30,\n      paddingRight: 30,\n      justifyContent: 'center',\n      alignItems: 'center'\n  },\n  input: {\n      height: 48,\n      borderRadius: 5,\n      overflow: 'hidden',\n      backgroundColor: 'white',\n      paddingLeft: 16,\n      flex: 1,\n      marginRight: 5\n  },\n  button: {\n      height: 47,\n      borderRadius: 5,\n      backgroundColor: '#788eec',\n      width: 80,\n      alignItems: \"center\",\n      justifyContent: 'center'\n  },\n  buttonText: {\n      color: 'white',\n      fontSize: 16\n  },\n  listContainer: {\n      marginTop: 20,\n      padding: 20,\n  },\n  entityContainer: {\n      marginTop: 16,\n      borderBottomColor: '#cccccc',\n      borderBottomWidth: 1,\n      paddingBottom: 16\n  },\n  entityText: {\n      fontSize: 20,\n      color: '#333333'\n  }\n})"]},"metadata":{},"sourceType":"module"}